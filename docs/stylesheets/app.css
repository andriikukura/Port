@charset "UTF-8";
@import url("https://fonts.googleapis.com/css?family=Raleway:400,500,700|Roboto");
body {
  font-family: 'Roboto', sans-serif;
  font-weight: 400;
  font-size: 16px; }

/*Header*/
header .navbar {
  background-color: #fb5577 !important; }
  header .navbar .nav-link {
    color: #fff !important;
    border-bottom: 2px solid transparent;
    transition: ease-in-out .3s; }
    header .navbar .nav-link:hover {
      border-bottom: 2px solid #fff; }
  header .navbar .navbar-brand {
    transition: ease-in-out .5s; }
    header .navbar .navbar-brand:hover {
      opacity: .5; }

header #intro {
  background-color: #fd839c;
  color: #fff;
  position: relative;
  height: 820px; }
  header #intro .uptitle {
    font-size: 24px;
    text-transform: uppercase;
    font-weight: bold;
    font-family: 'Raleway', sans-serif; }
  header #intro h1 {
    font-size: 60px;
    font-family: 'Raleway', sans-serif;
    font-weight: bold; }
  header #intro .downtitle {
    font-size: 24px;
    font-family: 'Raleway', sans-serif;
    font-weight: 400; }
  header #intro .social {
    display: inline-block;
    width: 60px;
    height: 60px;
    border: 1px solid #fff;
    text-align: center;
    vertical-align: middle;
    line-height: 58px;
    transform: rotate(45deg);
    margin-right: 45px;
    margin-top: 40px;
    cursor: pointer; }
    header #intro .social:hover .links {
      color: #fb5577; }
    header #intro .social .links {
      color: #fff; }
      header #intro .social .links:hover {
        color: #fb5577; }
      header #intro .social .links i {
        transform: rotate(-45deg); }
  header #intro .avatar {
    position: absolute;
    height: auto;
    max-width: 100%; }

header .flex-basis {
  -ms-flex-preferred-size: 100%;
      flex-basis: 100%; }

/* About Section*/
.about-me {
  padding-top: 100px; }
  .about-me .info .title {
    font-size: 50px;
    font-family: 'Raleway';
    font-weight: bold;
    color: #fd839c;
    position: relative; }
    .about-me .info .title:after {
      content: '';
      height: 2px;
      width: 165px;
      background-color: #fd839c;
      position: absolute;
      bottom: 0;
      left: 0; }
  .about-me .info .text {
    font-size: 14px; }
  .about-me .bar-title {
    margin-bottom: 0;
    margin-top: 20px; }
  .about-me .colorbar .progress {
    -ms-flex-preferred-size: 90%;
        flex-basis: 90%;
    background-color: #959595;
    border-radius: 0; }
    .about-me .colorbar .progress .progress-bar {
      background-color: #fd839c; }
  .about-me .about-grid {
    display: -ms-grid;
    display: grid;
    width: 100%;
    -ms-grid-columns: 60% 40%;
        grid-template-columns: 60% 40%;
    grid-template-areas: "info photowrapper";
    grid-gap: 15px; }
    .about-me .about-grid .info {
      grid-area: info; }
    .about-me .about-grid .photowrapper {
      grid-area: photowrapper; }
      .about-me .about-grid .photowrapper .img-wrapper {
        overflow: hidden;
        height: 460px;
        width: 100%; }
        .about-me .about-grid .photowrapper .img-wrapper img {
          width: 100%;
          height: auto;
          -o-object-fit: cover;
             object-fit: cover; }

/* Service Section*/
.service {
  padding-top: 100px; }
  .service .title {
    font-size: 50px;
    font-family: 'Raleway';
    font-weight: bold;
    color: #fd839c;
    position: relative; }
    .service .title:after {
      content: '';
      height: 2px;
      width: 165px;
      background-color: #fd839c;
      position: absolute;
      bottom: 0;
      left: 0; }
  .service .service-wrapper {
    overflow: hidden; }
    .service .service-wrapper img {
      width: 100%;
      height: auto;
      -o-object-fit: contain;
         object-fit: contain; }
    .service .service-wrapper .ser-title {
      font-size: 24px;
      text-transform: uppercase;
      color: #fd839c;
      font-weight: bold; }
    .service .service-wrapper .subtitle {
      text-transform: uppercase;
      font-size: 20px;
      position: relative;
      display: inline-block;
      padding-bottom: 10px; }
      .service .service-wrapper .subtitle:after {
        content: '';
        position: absolute;
        width: 100px;
        height: 2px;
        background-color: #fd839c;
        bottom: 0;
        left: 25px; }
    .service .service-wrapper .ser-text {
      font-size: 16px; }
  .service .service-list {
    padding-top: 50px;
    padding-bottom: 50px; }

/* Experiances*/
.timeline {
  padding: 40px 0; }
  .timeline .title {
    font-size: 50px;
    font-family: 'Raleway';
    font-weight: bold;
    color: #fd839c;
    position: relative;
    margin-bottom: 25px; }
    .timeline .title:after {
      content: '';
      height: 2px;
      width: 165px;
      background-color: #fd839c;
      position: absolute;
      bottom: 0;
      left: 0; }
  .timeline-item {
    padding: 10px 0;
    position: relative; }
    .timeline-item::before {
      content: 'â—‰';
      position: absolute;
      width: 1px;
      height: 100%;
      background-color: #959595;
      color: #fd839c;
      font-size: 25px;
      line-height: 300%;
      text-indent: -10px; }
    .timeline-item:nth-child(odd) {
      text-align: right;
      padding-right: 110px; }
      .timeline-item:nth-child(odd) .timeline-item-img {
        right: 20px; }
      .timeline-item:nth-child(odd):before {
        right: 0; }
    .timeline-item:nth-child(even) {
      margin-left: 50%;
      padding-left: 110px; }
      .timeline-item:nth-child(even) .timeline-item-img {
        left: 20px; }
      .timeline-item:nth-child(even):before {
        left: -1px; }
    .timeline-item-img {
      width: 74px;
      height: 74px;
      overflow: hidden;
      border-radius: 100%;
      border: 5px solid #959595;
      position: absolute; }
      .timeline-item-img img {
        width: 100%;
        height: 100%; }
    .timeline-item p {
      line-height: 1.4;
      margin: 4px 0 0 0; }
      .timeline-item p span {
        display: block;
        font-size: 12px;
        color: #fd839c;
        font-weight: bold;
        margin-top: 5px; }

@media (max-width: 600px) {
  .about-me .about-grid {
    grid-template-areas: "info info" "photowrapper photowrapper"; } }

@media (max-width: 767px) {
  #intro .avatar {
    display: none; } }

@media (max-width: 576px) {
  .timeline {
    padding: 40px 5%; }
    .timeline-item:nth-child(even) {
      margin-left: 0; }
    .timeline-item:nth-child(odd) {
      text-align: left;
      padding-left: 110px;
      padding-right: 0; }
      .timeline-item:nth-child(odd):before {
        left: -1px; }
    .timeline-item-img {
      left: 20px; } }

@media (max-width: 508px) {
  header #intro .social {
    width: 30px;
    height: 30px;
    line-height: 28px; } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5jc3MiLCJiYXNlL190eXBvZ3JhcGh5LnNjc3MiLCJiYXNlL19tYWluLnNjc3MiLCJtaXhpbnMvX2dyaWQuc2NzcyIsImJhc2UvX21lZGlhLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsaUJBQWlCO0FDQWpCLGtGQUFZO0FBRVo7RUFDRSxrQ0FBaUM7RUFDakMsaUJBQWdCO0VBQ2hCLGdCQUFlLEVBQ2hCOztBQ0xELFVBQVU7QUFDVjtFQUVRLHFDQUFvQyxFQXdCdkM7RUExQkw7SUFPWSx1QkFBc0I7SUFDdEIscUNBQW9DO0lBQ3BDLDRCQUEyQixFQVM5QjtJQWxCVDtNQVlnQiw4QkFBNkIsRUFFaEM7RUFkYjtJQW9CWSw0QkFBMkIsRUFLOUI7SUF6QlQ7TUFzQmdCLFlBQVcsRUFFZDs7QUF4QmI7RUE0QlEsMEJBQXlCO0VBQ3pCLFlBQVc7RUFDWCxtQkFBa0I7RUFLbEIsY0FBYSxFQStEaEI7RUFsR0w7SUF1Q1ksZ0JBQWU7SUFDZiwwQkFBeUI7SUFDekIsa0JBQWlCO0lBQ2pCLG1DQUFrQyxFQUNyQztFQTNDVDtJQThDWSxnQkFBZTtJQUNmLG1DQUFrQztJQUNsQyxrQkFBaUIsRUFDcEI7RUFqRFQ7SUFvRFksZ0JBQWU7SUFDZixtQ0FBa0M7SUFDbEMsaUJBQWdCLEVBQ25CO0VBdkRUO0lBMERTLHNCQUFxQjtJQUNyQixZQUFXO0lBQ1gsYUFBWTtJQUNaLHVCQUFzQjtJQUN0QixtQkFBa0I7SUFDbEIsdUJBQXNCO0lBQ3RCLGtCQUFpQjtJQUNqQix5QkFBd0I7SUFDeEIsbUJBQWtCO0lBQ2xCLGlCQUFnQjtJQUNoQixnQkFBZSxFQWlCZjtJQXJGVDtNQXNFWSxlQUFjLEVBR2hCO0lBekVWO01BNEVhLFlBQVcsRUFRZDtNQXBGVjtRQThFaUIsZUFBYyxFQUNqQjtNQS9FZDtRQWlGZ0IsMEJBQXlCLEVBRTNCO0VBbkZkO0lBMEZZLG1CQUFrQjtJQUNsQixhQUFZO0lBQ1osZ0JBQWUsRUFHbEI7O0FBL0ZUO0VBb0dRLDhCQUFnQjtN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Q1gsYUFBWSxFQUNmO0lBaERSO01BbURPLGlCQUFnQjtNQUNoQixrQkFBaUIsRUFRcEI7TUE1REo7UUFzRFcsZUFBYztRQUNkLGdCQUFlO1FBQ2YsZUFBYztRQUNkLGtCQUFpQjtRQUNqQixnQkFBZSxFQUNsQjs7QUVuVWI7RUFDQTtJQUVRLDhESm1PcUIsRUFBRSxFQUFFOztBQUVqQztFQUNFO0lBQ0UsY0FBYyxFQUFFLEVBQUU7O0FBRXRCO0VBQ0U7SUlyTk8saUJBQUssRUFBQTtJSnVOVjtNSXZOSyxlQUFLLEVBQUE7SUp5TlY7TUluTlksaUJBQWM7TUFDZCxvQkFJSDtNQVhKLGlCQUFLLEVBQUE7TUo2TlI7UUlqTk0sV0FBQSxFQUFBO0lKbU5SO01BQ0UsV0FBVyxFQUFFLEVBQUU7O0FBRXJCO0VBQ0U7SUkzTWMsWUFBWTtJQUNaLGFBQWE7SUo2TXpCLGtCQUFrQixFQUFFLEVBQUUiLCJmaWxlIjoiYXBwLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIkBjaGFyc2V0IFwiVVRGLThcIjtcbkBpbXBvcnQgdXJsKFwiaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3M/ZmFtaWx5PVJhbGV3YXk6NDAwLDUwMCw3MDB8Um9ib3RvXCIpO1xuYm9keSB7XG4gIGZvbnQtZmFtaWx5OiAnUm9ib3RvJywgc2Fucy1zZXJpZjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAxNnB4OyB9XG5cbi8qSGVhZGVyKi9cbmhlYWRlciAubmF2YmFyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZiNTU3NyAhaW1wb3J0YW50OyB9XG4gIGhlYWRlciAubmF2YmFyIC5uYXYtbGluayB7XG4gICAgY29sb3I6ICNmZmYgIWltcG9ydGFudDtcbiAgICBib3JkZXItYm90dG9tOiAycHggc29saWQgdHJhbnNwYXJlbnQ7XG4gICAgdHJhbnNpdGlvbjogZWFzZS1pbi1vdXQgLjNzOyB9XG4gICAgaGVhZGVyIC5uYXZiYXIgLm5hdi1saW5rOmhvdmVyIHtcbiAgICAgIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCAjZmZmOyB9XG4gIGhlYWRlciAubmF2YmFyIC5uYXZiYXItYnJhbmQge1xuICAgIHRyYW5zaXRpb246IGVhc2UtaW4tb3V0IC41czsgfVxuICAgIGhlYWRlciAubmF2YmFyIC5uYXZiYXItYnJhbmQ6aG92ZXIge1xuICAgICAgb3BhY2l0eTogLjU7IH1cblxuaGVhZGVyICNpbnRybyB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZDgzOWM7XG4gIGNvbG9yOiAjZmZmO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGhlaWdodDogODIwcHg7IH1cbiAgaGVhZGVyICNpbnRybyAudXB0aXRsZSB7XG4gICAgZm9udC1zaXplOiAyNHB4O1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgZm9udC1mYW1pbHk6ICdSYWxld2F5Jywgc2Fucy1zZXJpZjsgfVxuICBoZWFkZXIgI2ludHJvIGgxIHtcbiAgICBmb250LXNpemU6IDYwcHg7XG4gICAgZm9udC1mYW1pbHk6ICdSYWxld2F5Jywgc2Fucy1zZXJpZjtcbiAgICBmb250LXdlaWdodDogYm9sZDsgfVxuICBoZWFkZXIgI2ludHJvIC5kb3dudGl0bGUge1xuICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICBmb250LWZhbWlseTogJ1JhbGV3YXknLCBzYW5zLXNlcmlmO1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7IH1cbiAgaGVhZGVyICNpbnRybyAuc29jaWFsIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgd2lkdGg6IDYwcHg7XG4gICAgaGVpZ2h0OiA2MHB4O1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICNmZmY7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gICAgbGluZS1oZWlnaHQ6IDU4cHg7XG4gICAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpO1xuICAgIG1hcmdpbi1yaWdodDogNDVweDtcbiAgICBtYXJnaW4tdG9wOiA0MHB4O1xuICAgIGN1cnNvcjogcG9pbnRlcjsgfVxuICAgIGhlYWRlciAjaW50cm8gLnNvY2lhbDpob3ZlciAubGlua3Mge1xuICAgICAgY29sb3I6ICNmYjU1Nzc7IH1cbiAgICBoZWFkZXIgI2ludHJvIC5zb2NpYWwgLmxpbmtzIHtcbiAgICAgIGNvbG9yOiAjZmZmOyB9XG4gICAgICBoZWFkZXIgI2ludHJvIC5zb2NpYWwgLmxpbmtzOmhvdmVyIHtcbiAgICAgICAgY29sb3I6ICNmYjU1Nzc7IH1cbiAgICAgIGhlYWRlciAjaW50cm8gLnNvY2lhbCAubGlua3MgaSB7XG4gICAgICAgIHRyYW5zZm9ybTogcm90YXRlKC00NWRlZyk7IH1cbiAgaGVhZGVyICNpbnRybyAuYXZhdGFyIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgaGVpZ2h0OiBhdXRvO1xuICAgIG1heC13aWR0aDogMTAwJTsgfVxuXG5oZWFkZXIgLmZsZXgtYmFzaXMge1xuICBmbGV4LWJhc2lzOiAxMDAlOyB9XG5cbi8qIEFib3V0IFNlY3Rpb24qL1xuLmFib3V0LW1lIHtcbiAgcGFkZGluZy10b3A6IDEwMHB4OyB9XG4gIC5hYm91dC1tZSAuaW5mbyAudGl0bGUge1xuICAgIGZvbnQtc2l6ZTogNTBweDtcbiAgICBmb250LWZhbWlseTogJ1JhbGV3YXknO1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgIGNvbG9yOiAjZmQ4MzljO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuICAgIC5hYm91dC1tZSAuaW5mbyAudGl0bGU6YWZ0ZXIge1xuICAgICAgY29udGVudDogJyc7XG4gICAgICBoZWlnaHQ6IDJweDtcbiAgICAgIHdpZHRoOiAxNjVweDtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZDgzOWM7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICBib3R0b206IDA7XG4gICAgICBsZWZ0OiAwOyB9XG4gIC5hYm91dC1tZSAuaW5mbyAudGV4dCB7XG4gICAgZm9udC1zaXplOiAxNHB4OyB9XG4gIC5hYm91dC1tZSAuYmFyLXRpdGxlIHtcbiAgICBtYXJnaW4tYm90dG9tOiAwO1xuICAgIG1hcmdpbi10b3A6IDIwcHg7IH1cbiAgLmFib3V0LW1lIC5jb2xvcmJhciAucHJvZ3Jlc3Mge1xuICAgIGZsZXgtYmFzaXM6IDkwJTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjOTU5NTk1O1xuICAgIGJvcmRlci1yYWRpdXM6IDA7IH1cbiAgICAuYWJvdXQtbWUgLmNvbG9yYmFyIC5wcm9ncmVzcyAucHJvZ3Jlc3MtYmFyIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZDgzOWM7IH1cbiAgLmFib3V0LW1lIC5hYm91dC1ncmlkIHtcbiAgICBkaXNwbGF5OiBncmlkO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogNjAlIDQwJTtcbiAgICBncmlkLXRlbXBsYXRlLWFyZWFzOiBcImluZm8gcGhvdG93cmFwcGVyXCI7XG4gICAgZ3JpZC1nYXA6IDE1cHg7IH1cbiAgICAuYWJvdXQtbWUgLmFib3V0LWdyaWQgLmluZm8ge1xuICAgICAgZ3JpZC1hcmVhOiBpbmZvOyB9XG4gICAgLmFib3V0LW1lIC5hYm91dC1ncmlkIC5waG90b3dyYXBwZXIge1xuICAgICAgZ3JpZC1hcmVhOiBwaG90b3dyYXBwZXI7IH1cbiAgICAgIC5hYm91dC1tZSAuYWJvdXQtZ3JpZCAucGhvdG93cmFwcGVyIC5pbWctd3JhcHBlciB7XG4gICAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgICAgIGhlaWdodDogNDYwcHg7XG4gICAgICAgIHdpZHRoOiAxMDAlOyB9XG4gICAgICAgIC5hYm91dC1tZSAuYWJvdXQtZ3JpZCAucGhvdG93cmFwcGVyIC5pbWctd3JhcHBlciBpbWcge1xuICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgIGhlaWdodDogYXV0bztcbiAgICAgICAgICBvYmplY3QtZml0OiBjb3ZlcjsgfVxuXG4vKiBTZXJ2aWNlIFNlY3Rpb24qL1xuLnNlcnZpY2Uge1xuICBwYWRkaW5nLXRvcDogMTAwcHg7IH1cbiAgLnNlcnZpY2UgLnRpdGxlIHtcbiAgICBmb250LXNpemU6IDUwcHg7XG4gICAgZm9udC1mYW1pbHk6ICdSYWxld2F5JztcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICBjb2xvcjogI2ZkODM5YztcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cbiAgICAuc2VydmljZSAudGl0bGU6YWZ0ZXIge1xuICAgICAgY29udGVudDogJyc7XG4gICAgICBoZWlnaHQ6IDJweDtcbiAgICAgIHdpZHRoOiAxNjVweDtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZDgzOWM7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICBib3R0b206IDA7XG4gICAgICBsZWZ0OiAwOyB9XG4gIC5zZXJ2aWNlIC5zZXJ2aWNlLXdyYXBwZXIge1xuICAgIG92ZXJmbG93OiBoaWRkZW47IH1cbiAgICAuc2VydmljZSAuc2VydmljZS13cmFwcGVyIGltZyB7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIGhlaWdodDogYXV0bztcbiAgICAgIG9iamVjdC1maXQ6IGNvbnRhaW47IH1cbiAgICAuc2VydmljZSAuc2VydmljZS13cmFwcGVyIC5zZXItdGl0bGUge1xuICAgICAgZm9udC1zaXplOiAyNHB4O1xuICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICAgIGNvbG9yOiAjZmQ4MzljO1xuICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7IH1cbiAgICAuc2VydmljZSAuc2VydmljZS13cmFwcGVyIC5zdWJ0aXRsZSB7XG4gICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgICAgZm9udC1zaXplOiAyMHB4O1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgcGFkZGluZy1ib3R0b206IDEwcHg7IH1cbiAgICAgIC5zZXJ2aWNlIC5zZXJ2aWNlLXdyYXBwZXIgLnN1YnRpdGxlOmFmdGVyIHtcbiAgICAgICAgY29udGVudDogJyc7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgd2lkdGg6IDEwMHB4O1xuICAgICAgICBoZWlnaHQ6IDJweDtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZkODM5YztcbiAgICAgICAgYm90dG9tOiAwO1xuICAgICAgICBsZWZ0OiAyNXB4OyB9XG4gICAgLnNlcnZpY2UgLnNlcnZpY2Utd3JhcHBlciAuc2VyLXRleHQge1xuICAgICAgZm9udC1zaXplOiAxNnB4OyB9XG4gIC5zZXJ2aWNlIC5zZXJ2aWNlLWxpc3Qge1xuICAgIHBhZGRpbmctdG9wOiA1MHB4O1xuICAgIHBhZGRpbmctYm90dG9tOiA1MHB4OyB9XG5cbi8qIEV4cGVyaWFuY2VzKi9cbi50aW1lbGluZSB7XG4gIHBhZGRpbmc6IDQwcHggMDsgfVxuICAudGltZWxpbmUgLnRpdGxlIHtcbiAgICBmb250LXNpemU6IDUwcHg7XG4gICAgZm9udC1mYW1pbHk6ICdSYWxld2F5JztcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICBjb2xvcjogI2ZkODM5YztcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgbWFyZ2luLWJvdHRvbTogMjVweDsgfVxuICAgIC50aW1lbGluZSAudGl0bGU6YWZ0ZXIge1xuICAgICAgY29udGVudDogJyc7XG4gICAgICBoZWlnaHQ6IDJweDtcbiAgICAgIHdpZHRoOiAxNjVweDtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZDgzOWM7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICBib3R0b206IDA7XG4gICAgICBsZWZ0OiAwOyB9XG4gIC50aW1lbGluZS1pdGVtIHtcbiAgICBwYWRkaW5nOiAxMHB4IDA7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gICAgLnRpbWVsaW5lLWl0ZW06OmJlZm9yZSB7XG4gICAgICBjb250ZW50OiAn4peJJztcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHdpZHRoOiAxcHg7XG4gICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjOTU5NTk1O1xuICAgICAgY29sb3I6ICNmZDgzOWM7XG4gICAgICBmb250LXNpemU6IDI1cHg7XG4gICAgICBsaW5lLWhlaWdodDogMzAwJTtcbiAgICAgIHRleHQtaW5kZW50OiAtMTBweDsgfVxuICAgIC50aW1lbGluZS1pdGVtOm50aC1jaGlsZChvZGQpIHtcbiAgICAgIHRleHQtYWxpZ246IHJpZ2h0O1xuICAgICAgcGFkZGluZy1yaWdodDogMTEwcHg7IH1cbiAgICAgIC50aW1lbGluZS1pdGVtOm50aC1jaGlsZChvZGQpIC50aW1lbGluZS1pdGVtLWltZyB7XG4gICAgICAgIHJpZ2h0OiAyMHB4OyB9XG4gICAgICAudGltZWxpbmUtaXRlbTpudGgtY2hpbGQob2RkKTpiZWZvcmUge1xuICAgICAgICByaWdodDogMDsgfVxuICAgIC50aW1lbGluZS1pdGVtOm50aC1jaGlsZChldmVuKSB7XG4gICAgICBtYXJnaW4tbGVmdDogNTAlO1xuICAgICAgcGFkZGluZy1sZWZ0OiAxMTBweDsgfVxuICAgICAgLnRpbWVsaW5lLWl0ZW06bnRoLWNoaWxkKGV2ZW4pIC50aW1lbGluZS1pdGVtLWltZyB7XG4gICAgICAgIGxlZnQ6IDIwcHg7IH1cbiAgICAgIC50aW1lbGluZS1pdGVtOm50aC1jaGlsZChldmVuKTpiZWZvcmUge1xuICAgICAgICBsZWZ0OiAtMXB4OyB9XG4gICAgLnRpbWVsaW5lLWl0ZW0taW1nIHtcbiAgICAgIHdpZHRoOiA3NHB4O1xuICAgICAgaGVpZ2h0OiA3NHB4O1xuICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICAgIGJvcmRlci1yYWRpdXM6IDEwMCU7XG4gICAgICBib3JkZXI6IDVweCBzb2xpZCAjOTU5NTk1O1xuICAgICAgcG9zaXRpb246IGFic29sdXRlOyB9XG4gICAgICAudGltZWxpbmUtaXRlbS1pbWcgaW1nIHtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIGhlaWdodDogMTAwJTsgfVxuICAgIC50aW1lbGluZS1pdGVtIHAge1xuICAgICAgbGluZS1oZWlnaHQ6IDEuNDtcbiAgICAgIG1hcmdpbjogNHB4IDAgMCAwOyB9XG4gICAgICAudGltZWxpbmUtaXRlbSBwIHNwYW4ge1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgZm9udC1zaXplOiAxMnB4O1xuICAgICAgICBjb2xvcjogI2ZkODM5YztcbiAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgICAgIG1hcmdpbi10b3A6IDVweDsgfVxuXG5AbWVkaWEgKG1heC13aWR0aDogNjAwcHgpIHtcbiAgLmFib3V0LW1lIC5hYm91dC1ncmlkIHtcbiAgICBncmlkLXRlbXBsYXRlLWFyZWFzOiBcImluZm8gaW5mb1wiXHIgXCJwaG90b3dyYXBwZXIgcGhvdG93cmFwcGVyXCI7IH0gfVxuXG5AbWVkaWEgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgI2ludHJvIC5hdmF0YXIge1xuICAgIGRpc3BsYXk6IG5vbmU7IH0gfVxuXG5AbWVkaWEgKG1heC13aWR0aDogNTc2cHgpIHtcbiAgLnRpbWVsaW5lIHtcbiAgICBwYWRkaW5nOiA0MHB4IDUlOyB9XG4gICAgLnRpbWVsaW5lLWl0ZW06bnRoLWNoaWxkKGV2ZW4pIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiAwOyB9XG4gICAgLnRpbWVsaW5lLWl0ZW06bnRoLWNoaWxkKG9kZCkge1xuICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgIHBhZGRpbmctbGVmdDogMTEwcHg7XG4gICAgICBwYWRkaW5nLXJpZ2h0OiAwOyB9XG4gICAgICAudGltZWxpbmUtaXRlbTpudGgtY2hpbGQob2RkKTpiZWZvcmUge1xuICAgICAgICBsZWZ0OiAtMXB4OyB9XG4gICAgLnRpbWVsaW5lLWl0ZW0taW1nIHtcbiAgICAgIGxlZnQ6IDIwcHg7IH0gfVxuXG5AbWVkaWEgKG1heC13aWR0aDogNTA4cHgpIHtcbiAgaGVhZGVyICNpbnRybyAuc29jaWFsIHtcbiAgICB3aWR0aDogMzBweDtcbiAgICBoZWlnaHQ6IDMwcHg7XG4gICAgbGluZS1oZWlnaHQ6IDI4cHg7IH0gfVxuIiwiQGltcG9ydCB1cmwoJ2h0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1SYWxld2F5OjQwMCw1MDAsNzAwfFJvYm90bycpO1xuXG5ib2R5IHtcbiAgZm9udC1mYW1pbHk6ICdSb2JvdG8nLCBzYW5zLXNlcmlmO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDE2cHg7XG59XG4iLCIkZ3JpZC1jb2x1bW5zOiAxMjtcclxuLypIZWFkZXIqL1xyXG5oZWFkZXIge1xyXG4gICAgLm5hdmJhciB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZiNTU3NyAhaW1wb3J0YW50O1xyXG4gICAgICAgIFxyXG5cclxuICAgICAgICBcclxuICAgICAgICAubmF2LWxpbmsge1xyXG4gICAgICAgICAgICBjb2xvcjogI2ZmZiAhaW1wb3J0YW50O1xyXG4gICAgICAgICAgICBib3JkZXItYm90dG9tOiAycHggc29saWQgdHJhbnNwYXJlbnQ7XHJcbiAgICAgICAgICAgIHRyYW5zaXRpb246IGVhc2UtaW4tb3V0IC4zcztcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICY6aG92ZXIge1xyXG4gICAgICAgICAgICAgICAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkICNmZmY7XHJcbiAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgfVxyXG4gICAgICAgIC5uYXZiYXItYnJhbmQge1xyXG4gICAgICAgICAgICB0cmFuc2l0aW9uOiBlYXNlLWluLW91dCAuNXM7XHJcbiAgICAgICAgICAgICY6aG92ZXIge1xyXG4gICAgICAgICAgICAgICAgb3BhY2l0eTogLjU7XHJcbiAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgICNpbnRybyB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZkODM5YztcclxuICAgICAgICBjb2xvcjogI2ZmZjtcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgLy8gbGVmdDogMDtcclxuICAgICAgICAvLyByaWdodDogMDtcclxuICAgICAgICAvLyB0b3A6IDA7XHJcbiAgICAgICAgLy8gYm90dG9tOiAwO1xyXG4gICAgICAgIGhlaWdodDogODIwcHg7XHJcbiAgICAgICAgXHJcblxyXG4gICAgICAgIC51cHRpdGxlIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAyNHB4O1xyXG4gICAgICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgICAgICAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgICAgICAgICAgZm9udC1mYW1pbHk6ICdSYWxld2F5Jywgc2Fucy1zZXJpZjtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGgxIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiA2MHB4O1xyXG4gICAgICAgICAgICBmb250LWZhbWlseTogJ1JhbGV3YXknLCBzYW5zLXNlcmlmO1xyXG4gICAgICAgICAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC5kb3dudGl0bGUge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDI0cHg7XHJcbiAgICAgICAgICAgIGZvbnQtZmFtaWx5OiAnUmFsZXdheScsIHNhbnMtc2VyaWY7XHJcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAuc29jaWFsIHtcclxuICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICAgICB3aWR0aDogNjBweDtcclxuICAgICAgICAgaGVpZ2h0OiA2MHB4O1xyXG4gICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjZmZmO1xyXG4gICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcbiAgICAgICAgIGxpbmUtaGVpZ2h0OiA1OHB4O1xyXG4gICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7XHJcbiAgICAgICAgIG1hcmdpbi1yaWdodDogNDVweDtcclxuICAgICAgICAgbWFyZ2luLXRvcDogNDBweDtcclxuICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgICAgICAmOmhvdmVyIC5saW5rcyB7XHJcbiAgICAgICAgICAgIGNvbG9yOiAjZmI1NTc3O1xyXG4gICAgICAgICAgICBcclxuXHJcbiAgICAgICAgIH1cclxuXHJcbiAgICAgICAgIC5saW5rcyB7XHJcbiAgICAgICAgICAgICBjb2xvcjogI2ZmZjtcclxuICAgICAgICAgICAgICY6aG92ZXIge1xyXG4gICAgICAgICAgICAgICAgIGNvbG9yOiAjZmI1NTc3O1xyXG4gICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgaSB7XHJcbiAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgtNDVkZWcpO1xyXG5cclxuICAgICAgICAgICAgIH1cclxuICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICAuaW1hZ2Utd3JhcHBlciB7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgIH1cclxuICAgICAgICAuYXZhdGFyIHtcclxuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICBoZWlnaHQ6IGF1dG87XHJcbiAgICAgICAgICAgIG1heC13aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgXHJcbiAgICB9XHJcbiAgICAuZmxleC1iYXNpcyB7XHJcbiAgICAgICAgZmxleC1iYXNpczogMTAwJTtcclxuICAgIH1cclxufVxyXG5cclxuLyogQWJvdXQgU2VjdGlvbiovXHJcbi5hYm91dC1tZSB7XHJcbiAgICBwYWRkaW5nLXRvcDogMTAwcHg7XHJcblxyXG4gICAgLmluZm8ge1xyXG4gICAgICAgIC50aXRsZSB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogNTBweDtcclxuICAgICAgICAgICAgZm9udC1mYW1pbHk6ICdSYWxld2F5JztcclxuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICAgICAgICAgIGNvbG9yOiAjZmQ4MzljO1xyXG4gICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgICAgXHJcbiAgICAgICAgICAgICY6YWZ0ZXIge1xyXG4gICAgICAgICAgICAgICAgY29udGVudDogJyc7XHJcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDJweDtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiAxNjVweDtcclxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZDgzOWM7XHJcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICAgICAgICBib3R0b206IDA7XHJcbiAgICAgICAgICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC50ZXh0IHtcclxuICAgICAgICAgICBmb250LXNpemU6IDE0cHg7XHJcbiAgICAgICAgICAgXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC5iYXItdGl0bGUge1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDA7XHJcbiAgICAgICAgbWFyZ2luLXRvcDogMjBweDtcclxuICAgIH1cclxuXHJcbiAgICAuY29sb3JiYXIge1xyXG4gICAgICAgIC5wcm9ncmVzcyB7XHJcbiAgICAgICAgICAgIGZsZXgtYmFzaXM6IDkwJTtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzk1OTU5NTtcclxuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMDtcclxuICAgICAgICAgICAgLnByb2dyZXNzLWJhciB7XHJcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmQ4MzljO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC5hYm91dC1ncmlkIHtcclxuICAgICAgICBkaXNwbGF5OiBncmlkO1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogNjAlIDQwJTtcclxuICAgICAgICBncmlkLXRlbXBsYXRlLWFyZWFzOiBcImluZm8gcGhvdG93cmFwcGVyXCI7XHJcbiAgICAgICAgZ3JpZC1nYXA6IDE1cHg7XHJcblxyXG5cclxuICAgICAgICAuaW5mbyB7XHJcbiAgICAgICAgICAgIGdyaWQtYXJlYTogaW5mbztcclxuICAgICAgICB9XHJcbiAgICAgICAgLnBob3Rvd3JhcHBlciB7XHJcbiAgICAgICAgICAgIGdyaWQtYXJlYTogcGhvdG93cmFwcGVyO1xyXG4gICAgICAgICAgICAuaW1nLXdyYXBwZXIge1xyXG4gICAgICAgICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgICAgICAgICAgIGhlaWdodDogNDYwcHg7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICBpbWcge1xyXG4gICAgICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IGF1dG87XHJcbiAgICAgICAgICAgICAgICAgICBvYmplY3QtZml0OiBjb3ZlcjtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuLyogU2VydmljZSBTZWN0aW9uKi9cclxuLnNlcnZpY2Uge1xyXG4gICAgcGFkZGluZy10b3A6IDEwMHB4O1xyXG4gICAgLnRpdGxlIHtcclxuICAgICAgICBmb250LXNpemU6IDUwcHg7XHJcbiAgICAgICAgICAgIGZvbnQtZmFtaWx5OiAnUmFsZXdheSc7XHJcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgICAgICAgICBjb2xvcjogI2ZkODM5YztcclxuICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgICAgIFxyXG4gICAgICAgICAgICAmOmFmdGVyIHtcclxuICAgICAgICAgICAgICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAycHg7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMTY1cHg7XHJcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmQ4MzljO1xyXG4gICAgICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICAgICAgYm90dG9tOiAwO1xyXG4gICAgICAgICAgICAgICAgbGVmdDogMDtcclxuICAgICAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgLnNlcnZpY2Utd3JhcHBlciB7XHJcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgICBpbWcge1xyXG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgaGVpZ2h0OiBhdXRvO1xyXG4gICAgICAgICAgICBvYmplY3QtZml0OiBjb250YWluO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLnNlci10aXRsZSB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMjRweDtcclxuICAgICAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgICAgICAgICAgY29sb3I6ICNmZDgzOWM7XHJcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgICAgIH1cclxuICAgICAgICAuc3VidGl0bGUge1xyXG4gICAgICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDIwcHg7XHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICAgICAgICBwYWRkaW5nLWJvdHRvbTogMTBweDtcclxuICAgICAgICAgICAgJjphZnRlciB7XHJcbiAgICAgICAgICAgICAgICBjb250ZW50OiAnJztcclxuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiAxMDBweDtcclxuICAgICAgICAgICAgICAgIGhlaWdodDogMnB4O1xyXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZkODM5YztcclxuICAgICAgICAgICAgICAgIGJvdHRvbTogMDtcclxuICAgICAgICAgICAgICAgIGxlZnQ6IDI1cHg7XHJcblxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC5zZXItdGV4dCB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLnNlcnZpY2UtbGlzdCB7XHJcbiAgICAgICAgcGFkZGluZy10b3A6IDUwcHg7XHJcbiAgICAgICAgcGFkZGluZy1ib3R0b206IDUwcHg7XHJcbiAgICB9XHJcbn1cclxuXHJcbi8qIEV4cGVyaWFuY2VzKi9cclxuLy9DdXN0b20gU2Nzc1xyXG5cclxuLnRpbWVsaW5lIHtcclxuICAgIC50aXRsZSB7XHJcbiAgICAgICAgZm9udC1zaXplOiA1MHB4O1xyXG4gICAgICAgICAgICBmb250LWZhbWlseTogJ1JhbGV3YXknO1xyXG4gICAgICAgICAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgICAgICAgICAgY29sb3I6ICNmZDgzOWM7XHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMjVweDtcclxuICAgICAgICAgICBcclxuICAgICAgICAgICAgJjphZnRlciB7XHJcbiAgICAgICAgICAgICAgICBjb250ZW50OiAnJztcclxuICAgICAgICAgICAgICAgIGhlaWdodDogMnB4O1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDE2NXB4O1xyXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZkODM5YztcclxuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgICAgIGJvdHRvbTogMDtcclxuICAgICAgICAgICAgICAgIGxlZnQ6IDA7XHJcbiAgICAgICAgICAgIH1cclxuICAgIH1cclxuICAgIHBhZGRpbmc6IDQwcHggMDtcclxuICAgICYtaXRlbSB7XHJcbiAgICAgICAgcGFkZGluZzogMTBweCAwO1xyXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuXHJcbiAgICAgICAgJjo6YmVmb3JlIHtcclxuICAgICAgICAgICAgY29udGVudDogJ+KXiSc7XHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgd2lkdGg6IDFweDtcclxuICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjOTU5NTk1O1xyXG4gICAgICAgICAgICBjb2xvcjogI2ZkODM5YztcclxuICAgICAgICAgICAgZm9udC1zaXplOiAyNXB4O1xyXG4gICAgICAgICAgICBsaW5lLWhlaWdodDogMzAwJTtcclxuICAgICAgICAgICAgdGV4dC1pbmRlbnQ6IC0xMHB4O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJjpudGgtY2hpbGQob2RkKSB7XHJcbiAgICAgICAgICAgIHRleHQtYWxpZ246IHJpZ2h0O1xyXG4gICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiAxMTBweDtcclxuICAgICAgICAgICAgLnRpbWVsaW5lLWl0ZW0taW1nIHtcclxuICAgICAgICAgICAgICAgIHJpZ2h0OiAyMHB4O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICY6YmVmb3JlIHtcclxuICAgICAgICAgICAgICAgcmlnaHQ6IDA7IFxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmOm50aC1jaGlsZChldmVuKSB7XHJcbiAgICAgICAgICAgIEBpbmNsdWRlIG1ha2UtY29sLW9mZnNldCg2KTtcclxuICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAxMTBweDtcclxuICAgICAgICAgICAgLnRpbWVsaW5lLWl0ZW0taW1nIHtcclxuICAgICAgICAgICAgICAgIGxlZnQ6IDIwcHg7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgJjpiZWZvcmUge1xyXG4gICAgICAgICAgICAgICAgbGVmdDogLTFweDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJi1pbWcge1xyXG4gICAgICAgICAgICB3aWR0aDogNzRweDtcclxuICAgICAgICAgICAgaGVpZ2h0OiA3NHB4O1xyXG4gICAgICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiAxMDAlO1xyXG4gICAgICAgICAgICBib3JkZXI6IDVweCBzb2xpZCAjOTU5NTk1O1xyXG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICAgIGltZyB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBwIHtcclxuICAgICAgICAgICAgbGluZS1oZWlnaHQ6IDEuNDtcclxuICAgICAgICAgICAgbWFyZ2luOiA0cHggMCAwIDA7XHJcbiAgICAgICAgICAgIHNwYW4ge1xyXG4gICAgICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDEycHg7XHJcbiAgICAgICAgICAgICAgICBjb2xvcjogI2ZkODM5YztcclxuICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luLXRvcDogNXB4O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG4vL0N1c3RvbSBTY3NzIEVuZFxyXG5cclxuIiwiLy8vIEdyaWQgc3lzdGVtXHJcbi8vXHJcbi8vIEdlbmVyYXRlIHNlbWFudGljIGdyaWQgY29sdW1ucyB3aXRoIHRoZXNlIG1peGlucy5cclxuXHJcbkBtaXhpbiBtYWtlLWNvbnRhaW5lcigpIHtcclxuICB3aWR0aDogMTAwJTtcclxuICBwYWRkaW5nLXJpZ2h0OiAoJGdyaWQtZ3V0dGVyLXdpZHRoIC8gMik7XHJcbiAgcGFkZGluZy1sZWZ0OiAoJGdyaWQtZ3V0dGVyLXdpZHRoIC8gMik7XHJcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xyXG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xyXG59XHJcblxyXG5cclxuLy8gRm9yIGVhY2ggYnJlYWtwb2ludCwgZGVmaW5lIHRoZSBtYXhpbXVtIHdpZHRoIG9mIHRoZSBjb250YWluZXIgaW4gYSBtZWRpYSBxdWVyeVxyXG5AbWl4aW4gbWFrZS1jb250YWluZXItbWF4LXdpZHRocygkbWF4LXdpZHRoczogJGNvbnRhaW5lci1tYXgtd2lkdGhzLCAkYnJlYWtwb2ludHM6ICRncmlkLWJyZWFrcG9pbnRzKSB7XHJcbiAgQGVhY2ggJGJyZWFrcG9pbnQsICRjb250YWluZXItbWF4LXdpZHRoIGluICRtYXgtd2lkdGhzIHtcclxuICAgIEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoJGJyZWFrcG9pbnQsICRicmVha3BvaW50cykge1xyXG4gICAgICBtYXgtd2lkdGg6ICRjb250YWluZXItbWF4LXdpZHRoO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuQG1peGluIG1ha2Utcm93KCkge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC13cmFwOiB3cmFwO1xyXG4gIG1hcmdpbi1yaWdodDogKCRncmlkLWd1dHRlci13aWR0aCAvIC0yKTtcclxuICBtYXJnaW4tbGVmdDogKCRncmlkLWd1dHRlci13aWR0aCAvIC0yKTtcclxufVxyXG5cclxuQG1peGluIG1ha2UtY29sLXJlYWR5KCkge1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAvLyBQcmV2ZW50IGNvbHVtbnMgZnJvbSBiZWNvbWluZyB0b28gbmFycm93IHdoZW4gYXQgc21hbGxlciBncmlkIHRpZXJzIGJ5XHJcbiAgLy8gYWx3YXlzIHNldHRpbmcgYHdpZHRoOiAxMDAlO2AuIFRoaXMgd29ya3MgYmVjYXVzZSB3ZSB1c2UgYGZsZXhgIHZhbHVlc1xyXG4gIC8vIGxhdGVyIG9uIHRvIG92ZXJyaWRlIHRoaXMgaW5pdGlhbCB3aWR0aC5cclxuICB3aWR0aDogMTAwJTtcclxuICBtaW4taGVpZ2h0OiAxcHg7IC8vIFByZXZlbnQgY29sbGFwc2luZ1xyXG4gIHBhZGRpbmctcmlnaHQ6ICgkZ3JpZC1ndXR0ZXItd2lkdGggLyAyKTtcclxuICBwYWRkaW5nLWxlZnQ6ICgkZ3JpZC1ndXR0ZXItd2lkdGggLyAyKTtcclxufVxyXG5cclxuQG1peGluIG1ha2UtY29sKCRzaXplLCAkY29sdW1uczogJGdyaWQtY29sdW1ucykge1xyXG4gIGZsZXg6IDAgMCBwZXJjZW50YWdlKCRzaXplIC8gJGNvbHVtbnMpO1xyXG4gIC8vIEFkZCBhIGBtYXgtd2lkdGhgIHRvIGVuc3VyZSBjb250ZW50IHdpdGhpbiBlYWNoIGNvbHVtbiBkb2VzIG5vdCBibG93IG91dFxyXG4gIC8vIHRoZSB3aWR0aCBvZiB0aGUgY29sdW1uLiBBcHBsaWVzIHRvIElFMTArIGFuZCBGaXJlZm94LiBDaHJvbWUgYW5kIFNhZmFyaVxyXG4gIC8vIGRvIG5vdCBhcHBlYXIgdG8gcmVxdWlyZSB0aGlzLlxyXG4gIG1heC13aWR0aDogcGVyY2VudGFnZSgkc2l6ZSAvICRjb2x1bW5zKTtcclxufVxyXG5cclxuQG1peGluIG1ha2UtY29sLW9mZnNldCgkc2l6ZSwgJGNvbHVtbnM6ICRncmlkLWNvbHVtbnMpIHtcclxuICAkbnVtOiAkc2l6ZSAvICRjb2x1bW5zO1xyXG4gIG1hcmdpbi1sZWZ0OiBpZigkbnVtID09IDAsIDAsIHBlcmNlbnRhZ2UoJG51bSkpO1xyXG59XHJcbiIsIkBtZWRpYSAobWF4LXdpZHRoOiA2MDBweCkge1xyXG4uYWJvdXQtbWUge1xyXG4gICAgLmFib3V0LWdyaWQge1xyXG4gICAgICAgIGdyaWQtdGVtcGxhdGUtYXJlYXM6IFxyXG4gICAgICAgIFwiaW5mbyBpbmZvXCJcclxuICAgICAgICBcInBob3Rvd3JhcHBlciBwaG90b3dyYXBwZXJcIjtcclxuICAgIH1cclxufVxyXG59XHJcblxyXG5cclxuQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XHJcbiAgICAjaW50cm8ge1xyXG4gICAgICAgIC5hdmF0YXIge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBcclxufVxyXG5cclxuQG1lZGlhIChtYXgtd2lkdGg6IDU3NnB4KSB7XHJcbiAgICAudGltZWxpbmUge1xyXG4gICAgICAgIHBhZGRpbmc6IDQwcHggNSU7XHJcbiAgICAgICAgJi1pdGVtIHtcclxuICAgICAgICAgICAgJjpudGgtY2hpbGQoZXZlbikge1xyXG4gICAgICAgICAgICAgICAgQGluY2x1ZGUgbWFrZS1jb2wtb2Zmc2V0KDApO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICY6bnRoLWNoaWxkKG9kZCkge1xyXG4gICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcclxuICAgICAgICAgICAgICAgIHBhZGRpbmctbGVmdDogMTEwcHg7XHJcbiAgICAgICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiAwO1xyXG4gICAgICAgICAgICAgICAgJjpiZWZvcmUge1xyXG4gICAgICAgICAgICAgICAgICAgIGxlZnQ6IC0xcHg7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgJi1pbWcge1xyXG4gICAgICAgICAgICAgICAgbGVmdDogMjBweDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuQG1lZGlhIChtYXgtd2lkdGg6IDUwOHB4KSB7XHJcbiAgICBoZWFkZXIge1xyXG4gICAgICAgICNpbnRybyB7XHJcbiAgICAgICAgICAgIC5zb2NpYWwge1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDMwcHg7XHJcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDMwcHg7XHJcbiAgICAgICAgICAgICAgICBsaW5lLWhlaWdodDogMjhweDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxufSJdfQ== */
